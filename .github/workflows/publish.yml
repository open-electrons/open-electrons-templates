name: release open-electrons-templates

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-[a-zA-Z]*'
      - 'v[0-9]+.[0-9]+.[0-9]'

env:
  PUBLISH_TOKEN: ${{ secrets.OPEN_ELECTRONS_GITHUB_PUBLISH_SECRET }}

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: sbt compile and package
        run: |
          sbt compile
          sbt package

      - name: capture changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.0.1
        with:
          myToken: ${{ secrets.OPEN_ELECTRONS_GITHUB_PUBLISH_SECRET }}

      - name: Create GitHub release
        id: create-release
        uses: actions/create-release@v1
        with:
          allowUpdates: true
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false


      - name: Upload JAR files for each submodule
        run: |
          # Define the submodule names (update this list with your submodule names)
          SUBMODULES=(submodule1 submodule2 submodule3)

          # Iterate over each submodule
          for module in \"${SUBMODULES[@]}\"; do
            # Find the JAR file for the current submodule
            JAR_FILE=$(find ./target/scala-* -name \"$module*.jar\")

            if [ -n \"$JAR_FILE\" ]; then
              echo \"Uploading $JAR_FILE for $module\"
              curl -XPOST \
                -H \"Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}\" \
                -H \"Content-Type: application/java-archive\" \
                --data-binary @$JAR_FILE \
                \"${{ steps.create-release.outputs.upload_url }}?name=$(basename $JAR_FILE)\"
            else
              echo \"No JAR file found for $module\"
            fi
          done
